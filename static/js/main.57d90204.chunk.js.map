{"version":3,"sources":["components/Home/ProfilePic/profile_pic.jpg","components/Projects/Images/loginGif.gif","components/EmialInput/EmailInput.js","components/NavBar/NavBar.js","components/Footer.js","components/Home/PageContent/Text.js","components/Home/ProfilePic/ProfilePic.js","components/Home/Home.js","components/Projects/ProjectBox/ProjectBox.js","components/Projects/Stack/Stack.js","components/Projects/Projects.js","components/Interests/Interests.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","EmailInput","props","useState","email","snackbar","setSnack","useEffect","console","log","includes","setTimeout","id","navigator","clipboard","icon","faCopy","onClick","e","writeText","then","className","NavBar","to","Footer","href","target","rel","faGithub","faLinkedin","Text","style","backgroundColor","ProfilePic","src","profile","alt","Home","ProjectBox","children","Stack","stack","map","element","key","toLowerCase","Projects","colorTherapy","Interests","color","fontWeight","title","frameborder","allowtransparency","allow","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.57d90204.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile_pic.2d2efa22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loginGif.9a140565.gif\";","import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCopy } from \"@fortawesome/free-regular-svg-icons\";\r\nimport \"./EmailInput.css\";\r\n\r\nexport default function EmailInput(props) {\r\n  const [email, setEmail] = useState(\"quentin.vilchez@gmail.com\");\r\n  const [snackbar, setSnack] = useState(\"snackbar\");\r\n  const handleClick = (e) => {\r\n    navigator.clipboard.writeText(email).then(\r\n      function () {\r\n        console.log(\"email has been copied to clipboard\");\r\n        setSnack(\"snackbar show\");\r\n      },\r\n      function () {\r\n        console.log(\"email not copied\");\r\n      }\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    console.log(snackbar);\r\n    if (snackbar.includes(\"show\")) {\r\n      setTimeout(() => {\r\n        setSnack(\"snackbar\");\r\n      }, 3000);\r\n    }\r\n  }, [snackbar]);\r\n  return (\r\n    <div id='email-input'>\r\n      <div id='email'>\r\n        <div id='address'>{email}</div>\r\n        {navigator.clipboard ? (\r\n          <div id='copy-icon'>\r\n            <FontAwesomeIcon icon={faCopy} onClick={handleClick} />\r\n            <span id='copy-text'>Copy to Clipboard</span>\r\n            <div className={snackbar}>Copied!</div>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport EmailInput from \"../EmialInput/EmailInput\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NavBar(props) {\r\n  // const handleHomeClick = (e) => {\r\n  //   e.target.style.backgroundColor = \"#e54120\";\r\n  //   e.target.style.color = \"white\";\r\n  // };\r\n  // const handleProjectsClick = (e) => {\r\n  //   e.target.style.backgroundColor = \"#579d1f\";\r\n  //   e.target.style.color = \"white\";\r\n  // };\r\n  // const handleInterestsClick = (e) => {\r\n  //   e.target.style.backgroundColor = \"#0459db\";\r\n  //   e.target.style.color = \"white\";\r\n  // };\r\n\r\n  return (\r\n    <div id='nav-container'>\r\n      <nav>\r\n        <Link to='/' id='home'>\r\n          Home\r\n        </Link>\r\n        <Link id='projects' to='/projects'>\r\n          Projects\r\n        </Link>\r\n        <Link id='interests' to='/interests'>\r\n          Interests\r\n        </Link>\r\n      </nav>\r\n      <EmailInput />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div id='profile-links'>\r\n      <a\r\n        href='https://github.com/quentinv72'\r\n        target='_blank'\r\n        rel='noopener noreferrer'>\r\n        <FontAwesomeIcon icon={faGithub} />\r\n      </a>\r\n      <a\r\n        href='https://www.linkedin.com/in/quentin-vilchez-0b2a2a163/'\r\n        target='_blank'\r\n        rel='noopener noreferrer'>\r\n        <FontAwesomeIcon icon={faLinkedin} />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./Text.css\";\r\n\r\nimport Footer from \"../../Footer\";\r\n\r\nfunction Text(props) {\r\n  return (\r\n    <div className='text'>\r\n      <h1>\r\n        Hello, I'm <span id='first-name'>Quentin</span>{\" \"}\r\n      </h1>\r\n      <p className='description-text'>\r\n        I am a coder and a problem solver. I am mostly interested in full stack\r\n        web development technologies.\r\n      </p>\r\n      <p className='description-text'>\r\n        I graduated from the department of Mathematics at the University of\r\n        Toronto in 2019.\r\n      </p>\r\n      <p className='description-text'>\r\n        Check out some of my projects in the{\" \"}\r\n        <span className='highlight' style={{ backgroundColor: \"#579d1f\" }}>\r\n          Projects\r\n        </span>{\" \"}\r\n        section <span>&#128526;</span>.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n","import React from \"react\";\r\nimport \"./ProfilePic.css\";\r\nimport profile from \"./profile_pic.jpg\";\r\nfunction ProfilePic(props) {\r\n  return (\r\n    <div className='profile-picture'>\r\n      <img src={profile} alt='Profile' id='profile-image' />\r\n      <div className='overlay'>\r\n        <div className='neural-text'>\r\n          This image of me was generated using neural style transfer.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfilePic;\r\n","import React from \"react\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport Text from \"./PageContent/Text\";\r\nimport \"./Home.css\";\r\nimport ProfilePic from \"./ProfilePic/ProfilePic\";\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <div className='home-grid'>\r\n      <ProfilePic />\r\n      <Text />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ProjectBox.css\";\r\n\r\nfunction ProjectBox(props) {\r\n  return (\r\n    <div className='project-container'>\r\n      <div className='project-box'>\r\n        <img src={props.src} alt={props.alt} className='project-pic' />\r\n        <a\r\n          className='slider'\r\n          href={props.href}\r\n          target='_blank'\r\n          rel='noopener noreferrer'>\r\n          <div className='description'> {props.children}</div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectBox;\r\n\r\n//content props.children\r\n","import React from \"react\";\r\nimport \"./Stack.css\";\r\n\r\nexport default function Stack(props) {\r\n  if (props.stack) {\r\n    const stack = props.stack.map((element) => (\r\n      <li key={element.toLowerCase()} className='technology'>\r\n        {element}\r\n      </li>\r\n    ));\r\n    return <ul className='stacks'>{stack}</ul>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Projects.css\";\r\nimport ProjectBox from \"./ProjectBox/ProjectBox\";\r\nimport colorTherapy from \"./Images/loginGif.gif\";\r\nimport Stack from \"./Stack/Stack\";\r\n\r\nfunction Projects(props) {\r\n  return (\r\n    <div className='all-projects'>\r\n      <ProjectBox\r\n        src={colorTherapy}\r\n        alt='color therapy gif'\r\n        href='https://github.com/kabirvirji/colortherapy'>\r\n        <h2 className='project-title'>Color Therapy</h2>\r\n        <p className='project-description'>\r\n          Color Therapy is a web app that lets you generate Spotify playlists\r\n          based on your 'color mood'. Go ahead and test it out{\" \"}\r\n          <span>&#128526;</span>.\r\n        </p>\r\n        <Stack stack={[\"React\", \"JavaScript\", \"HTML\", \"CSS\", \"Node\", \"Git\"]} />\r\n      </ProjectBox>\r\n      <ProjectBox>Hello Project 2</ProjectBox>\r\n      <ProjectBox>Hello Project 3</ProjectBox>\r\n      <ProjectBox>Hello Project 4</ProjectBox>\r\n      <ProjectBox>Hello Project 5</ProjectBox>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n","import React from \"react\";\r\nimport \"./Interests.css\";\r\n\r\nexport default function Interests(props) {\r\n  const X = \"X\";\r\n  const PX = `\\\\mathbb{P}(X)`;\r\n  return (\r\n    <div>\r\n      <div className='text'>\r\n        <h2>\r\n          I spend most of my time reading about{\" \"}\r\n          <span className='highlight' style={{ color: \"#faa200\" }}>\r\n            Mathematics\r\n          </span>\r\n          , listening to{\" \"}\r\n          <span className='highlight' style={{ color: \"#faa200\" }}>\r\n            music\r\n          </span>{\" \"}\r\n          and watching{\" \"}\r\n          <span className='highlight' style={{ color: \"#faa200\" }}>\r\n            series\r\n          </span>\r\n          . I also really enjoy playing{\" \"}\r\n          <span className='highlight' style={{ color: \"#faa200\" }}>\r\n            squash\r\n          </span>\r\n          , I started playing when I was at university and have continued since.\r\n        </h2>\r\n      </div>\r\n      <div className='text list'>\r\n        <h3>Cantor's Theorem:</h3>\r\n        <p>\r\n          This is one of my <span style={{ fontWeight: \"bold\" }}>favorite</span>{\" \"}\r\n          results in Mathematics. It's a beautiful result from Set Theory that\r\n          gives us a relationship between the size of a set and it's power set.\r\n          I find this result very deep, yet it is easy to fomulate and prove.{\" \"}\r\n        </p>\r\n        <p>\r\n          It is as follows: <br /> <br />\r\n          If X is any set and P(X) is its power set, then |X|{\"<\"}|P(X)|, where\r\n          |.| is the cardinality of the set.\r\n        </p>\r\n        <p>\r\n          Click{\" \"}\r\n          <a\r\n            href='https://proofwiki.org/wiki/Cardinality_of_Set_less_than_Cardinality_of_Power_Set'\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            style={{ color: \"#e54120\" }}>\r\n            here\r\n          </a>{\" \"}\r\n          for a proof.\r\n        </p>\r\n      </div>\r\n      <div className='text list'>\r\n        <h3>Paul Institute</h3>\r\n        <p>\r\n          Lately I've really been into the work of the Paul brothers, Jai Paul\r\n          and A.K. Paul. The Paul Institute was founded in 2016 by the two\r\n          siblings, and has been releasing music ever since. Check out the Paul\r\n          Institute playlist on Spotify.\r\n        </p>\r\n        <div className='spotify-player'>\r\n          <iframe\r\n            title='Spotify Playlist'\r\n            src='https://open.spotify.com/embed/playlist/48zee8uSp4H7oKdWan7uDy'\r\n            frameborder='0'\r\n            allowtransparency='true'\r\n            allow='encrypted-media'></iframe>\r\n        </div>\r\n      </div>\r\n      <div className='text list'>\r\n        <h3>Television</h3>\r\n        <p>\r\n          My favorite shows of the 2019-2020 year are:\r\n          <ol>\r\n            <li>The New Pope</li>\r\n            <li>Platane Saison tree</li>\r\n            <li>Barry</li>\r\n            <li>Westworld, season 3</li>\r\n          </ol>\r\n          Let me know what you think.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home/Home\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport Footer from \"./components/Footer\";\nimport Projects from \"./components/Projects/Projects\";\nimport Interests from \"./components/Interests/Interests\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact>\n          <NavBar />\n          <Home />\n          <Footer />\n        </Route>\n        <Route path='/projects'>\n          <NavBar />\n          <Projects />\n          <Footer />\n        </Route>\n        <Route path='/interests'>\n          <NavBar />\n          <Interests />\n          <Footer />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}